{
  "name": "qconn-extension",
  "displayName": "QNX qconn Extension",
  "description": "QNX target file system browser, process explorer and terminal in vs code",
  "version": "2.0.0",
  "icon": "resources/icon.png",
  "publisher": "NikolajFogh",
  "engines": {
    "vscode": "^1.85.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nfogh/qconn-extension"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onFileSystem:qconnfs"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "QConn",
      "properties": {
        "qConn.sdpSearchPaths": {
          "type": "array",
          "description": "Paths to search for your QNX SDP. Needed for debugging. You don't need to set exact paths. The extension will search subdirectories automatically.",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "qConn.additionalSOLibSearchPaths": {
          "type": "array",
          "description": "Paths to search for additional SO libs. Subdirectories are also searched.",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "qConn.target.host": {
          "type": "string",
          "default": "192.168.203.128",
          "description": "The host that qconn is running on"
        },
        "qConn.target.port": {
          "type": "number",
          "default": "8000",
          "description": "The port that qconn is running on"
        },
        "qConn.showMemoryUsage": {
          "type": "boolean",
          "default": "true",
          "description": "Show QNX system memory usage in the status bar"
        },
        "qConn.coreDumpPath": {
          "type": "string",
          "default": "/var/dumps",
          "description": "Location of core dumps on target"
        }
      }
    },
    "commands": [
      {
        "command": "qconn.PickCoreFileOnTarget",
        "title": "Pick a cure dump from target"
      },
      {
        "command": "qconn.PickCoreFileOnLocal",
        "title": "Pick a core dump from local"
      },
      {
        "command": "qconn.kill",
        "title": "Send SIGKILL to QNX Process",
        "shortTitle": "Send SIGKILL"
      },
      {
        "command": "qconn.sigint",
        "title": "Send SIGINT to QNX Process",
        "shortTitle": "Send SIGINT"
      },
      {
        "command": "qconn.attach",
        "title": "Attach to QNX process",
        "shortTitle": "Attach"
      },
      {
        "command": "qconn.debug",
        "title": "Debug QNX executable",
        "shortTitle": "Debug"
      },
      {
        "command": "qconn.debug_corefile",
        "title": "Debug QNX core file",
        "shortTitle": "Debug Core"
      },
      {
        "command": "qconn.connectFs",
        "title": "Add QNX Filesystem to workspace"
      },
      {
        "command": "qconn.createQConnTerminal",
        "title": "Create QNX Terminal"
      },
      {
        "command": "qconn.selectQConnHost",
        "title": "Select QNX Host"
      },
      {
        "command": "qconn.copyFileToTarget",
        "title": "Copy file to QNX target"
      },
      {
        "command": "qconnFileExplorer.refresh",
        "title": "Refresh the qconn file explorer",
        "icon": "$(refresh)"
      },
      {
        "command": "qconnFileExplorer.deleteFile",
        "title": "Delete"
      },
      {
        "command": "qconnFileExplorer.copyToHost",
        "title": "Copy to host"
      },
      {
        "command": "qconnFileExplorer.renameFile",
        "title": "Rename..."
      },
      {
        "command": "qconnFileExplorer.createFile",
        "title": "New file...",
        "icon": "$(file-add)"
      },
      {
        "command": "qconnFileExplorer.createDirectory",
        "title": "New folder...",
        "icon": "$(file-directory-create)"
      },
      {
        "command": "qconnProcessView.refresh",
        "title": "Refresh the qconn processView",
        "icon": "$(refresh)"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "qConnProcessView",
          "name": "QNX Processes",
          "contextualTitle": "QNX Processes"
        },
        {
          "id": "qConnFileExplorer",
          "name": "QNX File Explorer",
          "contextualTitle": "QNX File Explorer"
        }
      ]
    },
    "terminal": {
      "profiles": [
        {
          "id": "qconnTerminal.terminal-profile",
          "icon": "terminal",
          "title": "QNX Terminal"
        }
      ]
    },
    "menus": {
      "view/item/context": [
        {
          "command": "qconn.kill",
          "when": "view == qConnProcessView && viewItem == ProcessID"
        },
        {
          "command": "qconn.sigint",
          "when": "view == qConnProcessView && viewItem == ProcessID"
        },
        {
          "command": "qconn.attach",
          "when": "view == qConnProcessView && viewItem == ProcessID"
        },
        {
          "command": "qconn.debug",
          "when": "view == qConnFileExplorer && viewItem == file"
        },
        {
          "command": "qconn.debug_corefile",
          "when": "view == qConnFileExplorer && viewItem == coredump"
        },
        {
          "command": "qconnFileExplorer.deleteFile",
          "when": "view == qConnFileExplorer"
        },
        {
          "command": "qconnFileExplorer.copyToHost",
          "when": "view == qConnFileExplorer"
        },
        {
          "command": "qconnFileExplorer.renameFile",
          "when": "view == qConnFileExplorer"
        },
        {
          "command": "qconnFileExplorer.createFile",
          "when": "view == qConnFileExplorer"
        },
        {
          "command": "qconnFileExplorer.createDirectory",
          "when": "view == qConnFileExplorer"
        }
      ],
      "explorer/context": [
        {
          "command": "qconn.copyFileToTarget",
          "group": "navigation",
          "when": "isFileSystemResource && !explorerResourceIsFolder"
        }
      ],
      "view/title": [
        {
          "command": "qconnFileExplorer.refresh",
          "when": "view == qConnFileExplorer",
          "group": "navigation"
        },
        {
          "command": "qconnFileExplorer.createDirectory",
          "when": "view == qConnFileExplorer",
          "group": "navigation"
        },
        {
          "command": "qconnFileExplorer.createFile",
          "when": "view == qConnFileExplorer",
          "group": "navigation"
        },
        {
          "command": "qconnProcessView.refresh",
          "when": "view == qConnProcessView",
          "group": "navigation"
        }
      ]
    },
    "debuggers": [
      {
        "type": "qconn-core",
        "label": "QNX core-dump debugger",
        "languages": [
          "cpp"
        ],
        "configurationAttributes": {
          "launch": {
            "required": [
              "coreDumpPath"
            ],
            "properties": {
              "coreDumpPath": {
                "type": "string",
                "description": "Location of the core dump file"
              },
              "program": {
                "type": "string",
                "description": "The program to load symbols from"
              },
              "additionalSOLibSearchPath": {
                "type": "string",
                "description": "Semicolon separated list of directories to use to search for .so files. Example: \"/dir1;/dir2\"."
              },
              "miDebuggerPath": {
                "type": "string",
                "description": "Location of the debugger"
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "name": "QNX: Remote QNX core dump",
            "type": "qconn-core",
            "request": "launch",
            "coreDumpPath": "^\"\\${command:qconn.PickCoreFileOnTarget}\""
          },
          {
            "name": "QNX: Local core dump debug",
            "type": "qconn-core",
            "request": "launch",
            "coreDumpPath": "^\"\\${command:qconn.PickCoreFileOnLocal}\""
          }
        ],
        "configurationSnippets": [
          {
            "label": "QNX: Remote QNX core dump",
            "description": "Debug a QNX core dump located on target",
            "body": {
              "type": "qconn-core",
              "request": "launch",
              "name": "QNX: Remote QNX core dump",
              "coreDumpPath": "^\"\\${command:qconn.PickCoreFileOnTarget}\""
            }
          },
          {
            "label": "QNX: Local QNX core dump",
            "description": "Debug a QNX core dump located on your local machine",
            "body": {
              "type": "qconn-core",
              "request": "launch",
              "name": "QNX: Local QNX core dump",
              "coreDumpPath": "^\"\\${command:qconn.PickCoreFileOnLocal}\""
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "test-compile": "tsc -p ./",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/picomatch": "^3.0.1",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "esbuild": "^0.19.10",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "async-mutex": "^0.4.0",
    "fdir": "^6.4.0",
    "node-bufferreader": "^1.0.1",
    "qconn": "^1.1.3"
  },
  "extensionDependencies": [
    "ms-vscode.cpptools"
  ]
}